name: "Build & Test"

on:
  workflow_dispatch:
  
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x', '7.0.x', '8.0.x' ]

    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      #Setup .NET Core
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_AUTH_TOKEN}}

      # You can test your matrix by printing the current dotnet version
      - name: Display dotnet version
        run: dotnet --version
    
      # Npm Install and build Cases UI
      - name: NPM Install and Build Cases UI
        run: |
          cd src/Indice.Features.Cases.App
          npm install --force
          npm run build:template
          
      # Npm Install and build Admin UI
      - name: NPM Install and Build Admin UI
        run: |
          cd src/Indice.Features.Identity.AdminUI.App
          npm install --force
          npm run build:template
          
      # Npm Install and build Messages UI
      - name: NPM Install and Build Messages UI
        run: |
          cd src/Indice.Features.Messages.App
          npm install --force
          npm run build:template
      
      # Npm Install and build Risk UI
      - name: NPM Install and Build Risk UI
        run: |
          cd src/Indice.Features.Risk.App
          npm install --force
          npm run build:template

      # Npm Install and build Identity UI
      - name: NPM Install and Build Identity UI
        run: |
          cd src/Indice.Features.Identity.UI
          npm install --force
          npm run gulp -- copy:libs
          npm run gulp -- sass
      
      #Create .nuget dir
      - name: Create .nuget dir
        shell: pwsh
        run: |
          if (!(Test-Path -Path ".\.nuget" ))
          {
            New-Item -ItemType "directory" -Path ".\.nuget"
          }
          if (!(Test-Path -Path ".\.nuget\packages" ))
          {
            New-Item -ItemType "directory" -Path ".\.nuget\packages"
          }
          
      # BUILD
      - name: Install dependencies
        run: dotnet restore /nowarn:netsdk1138
      - name: Clean
        run: dotnet clean
      - name: Build
        run: dotnet build --configuration Release
      
      # TEST 
      - name: Test with dotnet
        run: dotnet test --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
          # Use always() to always run this step to publish test results when there are test failures
          if: ${{ always() }}
name: "Publish to NuGet"

on:
  workflow_dispatch:
  # push:
  #    branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    # Checkout
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    #Setup .NET Core
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        source-url: https://api.nuget.org/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.NUGET_AUTH_TOKEN}}
        
    # Setup Node.js
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20
  
    # Npm Install and build Identity UI
    - name: NPM Install and Build Identity UI
      run: |
        cd src/Indice.Features.Identity.UI
        npm install --force
        npm run gulp -- copy:libs
        npm run gulp -- sass
    
    # Npm Install Cases
    - name: NPM Install Cases
      run: |
        cd src/Indice.Features.Cases.App
        npm install
    # Npm Install AdminUI
    - name: NPM Install AdminUI
      run: |
        cd src/Indice.Features.Identity.AdminUI.App
        npm install
    # Npm Install Messages
    - name: NPM Install Messages
      run: |
        cd src/Indice.Features.Messages.App
        npm install
    # Npm Install Risk App
    - name: NPM Install Risk
      run: |
        cd src/Indice.Features.Risk.App
        npm install
    #Create .nuget dir
    - name: Create .nuget dir
      shell: pwsh
      run: |
        if (!(Test-Path -Path ".\.nuget" ))
        {
          New-Item -ItemType "directory" -Path ".\.nuget"
        }
        if (!(Test-Path -Path ".\.nuget\packages" ))
        {
          New-Item -ItemType "directory" -Path ".\.nuget\packages"
        }
    
    # BUILD
    - name: Install dependencies
      run: dotnet restore /nowarn:netsdk1138
    - name: Clean
      run: dotnet clean
    - name: Build
      run: |
          dotnet build Indice.Platform.Ecmascript.slnf --no-restore --configuration Release
          dotnet build --no-restore --configuration Release
    # Pack
    - name: Build solution and generate NuGet package
      run: ./pack.ps1

    - name: List files and size recursively
      run: find ./artifacts -type f -exec du -h {} + | sort -h

    # Push to NuGet
    # - name: Push generated package to GitHub registry
    #   run: dotnet nuget push '**/Indice*.nupkg' --skip-duplicate -k ${{ secrets.NUGET_AUTH_TOKEN }}

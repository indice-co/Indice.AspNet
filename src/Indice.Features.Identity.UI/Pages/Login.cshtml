@page "/login"

@model BaseLoginModel

@inject IViewLocalizer Localizer
@inject IHttpContextAccessor HttpContextAccessor

@{
    var displayRegistrationLinks = true;
    var displayForgotPasswordLinks = true;
    var title = ViewData["Title"] = Localizer["Login"].Value;
}

<section class="sign-in m-auto">
    <partial name="_PageHeader" model="title" />
    <partial name="_ValidationSummary" />
    @if (Model.ViewModel.VisibleExternalProviders.Any())
    {
        <div class="login-form">
            <ul class="list-unstyled">
                @foreach (var provider in Model.ViewModel.VisibleExternalProviders)
                {
                    <li class="idp idp-@provider.AuthenticationScheme.ToLower()">
                        <a class="btn btn-@provider.AuthenticationScheme.ToLower() btn-hover" asp-page="Challenge" asp-route-provider="@provider.AuthenticationScheme" asp-route-returnUrl="@Model.ViewModel.ReturnUrl" asp-route-prompt="@OidcConstants.PromptModes.SelectAccount">
                            @Localizer[provider.DisplayName]
                        </a>
                    </li>
                }
            </ul>
        </div>
        <div class="hr-sect">@Localizer["OR"]</div>
    }
    @if (Model.ViewModel.EnableLocalLogin)
    {
        <form asp-route-returnUrl="@Model.ViewModel.ReturnUrl" method="POST">
            <input type="hidden" asp-for="ViewModel.ReturnUrl" />
            <input type="hidden" asp-for="ViewModel.DeviceId" />
            <div class="form-group">
                <label asp-for="Input.UserName" class="">@Localizer["Username"]</label>
                <input class="form-control" type="text" placeholder="@Localizer["Username"]" asp-for="Input.UserName" />
                <span asp-validation-for="Input.UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password" class="">@Localizer["Password"]</label>
                <input class="form-control" type="password" placeholder="@Localizer["Password"]" asp-for="Input.Password" autocomplete="off" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                @if (Model.ViewModel.AllowRememberLogin)
                {
                    <div class="form-check custom-checkbox d-inline-block">
                        <label class="form-check-label">
                            <input asp-for="Input.RememberLogin" type="checkbox" class="form-check-input text-info" />
                            <span class="control"></span>
                            @Localizer["Remember me"]
                        </label>
                    </div>
                }
                @if (displayForgotPasswordLinks)
                {
                    <a class="btn btn-link p-0 text-md float-right text-blue" asp-page="ForgotPassword">@Localizer["Forgot password?"]</a>
                }
            </div>
            <div class="form-group">
                <div class="form-row m-0 w-100">
                    @if (displayRegistrationLinks)
                    {
                        <div class="col-sm-6 col-12 py-1">
                            <a class="btn btn-link btn-block" asp-page="Register" asp-route-returnUrl="@Model.ViewModel.ReturnUrl">
                                @Localizer["Join us"]
                            </a>
                        </div>
                    }
                    <div class="@(displayRegistrationLinks ? "col-sm-6" : string.Empty) col-12 py-1">
                        <button class="btn btn-primary btn-block" name="button" value="login" type="submit">@Localizer["Sign in"]</button>
                    </div>
                </div>
            </div>
        </form>
    }
    @if (!Model.ViewModel.EnableLocalLogin && !Model.ViewModel.VisibleExternalProviders.Any())
    {
        <div class="alert alert-warning">
            <strong>@Localizer["Invalid login request"]</strong>
            @Localizer["There are no login schemes configured for this client."]
        </div>
    }
</section>

@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScripts");
    }
    <script csp-nonce="true">
        document.querySelectorAll('.idp a').forEach(function (el) {
            el.onclick = function (link) {
                if (!link.target.classList.contains('disabled')) {
                    link.target.classList.add('disabled');
                }
            };
        });
    </script>
    @if (Model.ViewModel.GenerateDeviceId)
    {
        <script type="text/javascript" src="/identity-ui/lib/@@fingerprintjs/fingerprintjs/dist/fp.min.js" csp-nonce></script>
        <script type="text/javascript" src="/identity-ui/js/mfa.js" csp-nonce></script>
        <script type="text/javascript" csp-nonce>
            $(document).ready(function () {
                var viewModelParameters = {
                    $deviceIdInput: $('#DeviceId'),
                    browserFamily: '@(HttpContextAccessor?.HttpContext?.Request.GetBrowserName() ?? string.Empty)'
                };
                var viewModel = new indice.mfaViewModelFactory(viewModelParameters);
                viewModel.init();
                viewModel.calculateDeviceId();
            });
        </script>
    }
}

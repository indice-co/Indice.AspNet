@page "/manage/profile"

@inject IIdentityViewLocalizer Localizer
@inject IZoneInfoProvider zoneInfoProvider

@model BaseProfileModel

@{
    Layout = "_IdentityProfileLayout";
    var title = ViewData["Title"] = Localizer["Profile"].Value;
    var alert = TempData.Get<AlertModel>("Alert");
}

<div class="tab-panel"
     id="edit-profile"
     role="tabpanel"
     aria-labelledby="profile-tab">
    <h3 class="text-black mb-1">@Localizer["Manage Profile"]</h3>
    <div id="send-confirmation-success" class=" text-sm hidden my-2.5">
        <div class="alert alert-success">@Localizer["A confirmation email has been sent to {0}.", Model.View.Email ?? throw new InvalidOperationException("User email cannot be null.")]</div>
    </div>
    <div id="send-confirmation-error" class=" text-sm hidden my-2.5">
        <div class="alert alert-danger">@Localizer["Confirmation email delivery failed. Please contact system administrator."]</div>
    </div>
    @if (Model.ProfileSuccessfullyChanged)
    {
        var message = Localizer["Your profile was updated successfully."].Value;
        if (Model.EmailChangeRequested)
        {
            message += $" {Localizer["An email has been sent to your new email address in order to confirm it."].Value}";
        }
        <partial name="_Alert" model="@AlertModel.Success(message)" />
    }
    @if (Model.View.EmailChangePending && !Model.ProfileSuccessfullyChanged)
    {
        <partial name="_Alert" model="@AlertModel.Warn(Localizer.GetString("Your new email verification is still pending."))" />
    }
    <partial name="_Alert" model="alert" />
    <partial name="_ValidationSummary" />
    <form method="post" class="md:max-h-[60vh] overflow-y-scroll pr-8">
        <div class="row">
            <div class="input-group">
                <input class="peer" type="text" placeholder="@Localizer["First name"]" asp-for="Input.FirstName" />
                <label class="peer-focus:-translate-y-[6px] peer-focus:visible absolute" asp-for="Input.FirstName">@Localizer["First name"]</label>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="input-group">
                <input class="peer" type="text" placeholder="@Localizer["Last name"]" asp-for="Input.LastName" />
                <label class="peer-focus:-translate-y-[6px] peer-focus:visible absolute" asp-for="Input.LastName">@Localizer["Last name"]</label>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="input-group">
                <input class="peer" type="text" placeholder="@Localizer["Username"]" asp-for="Input.UserName" />
                <label class="peer-focus:-translate-y-[6px] peer-focus:visible absolute" asp-for="Input.UserName">@Localizer["Username"]</label>
                <span asp-validation-for="Input.UserName" class="text-danger"></span>
            </div>
            <div class="input-group">
                <a indice-if="Model.View.EmailChangePending" href="#" id="resend-email-link" style="font-size: x-small;">(@Localizer["Confirmation"] →)</a>
                <input class="peer" type="text" placeholder="@Localizer["Email"]" asp-for="Input.Email" />
                <label class="peer-focus:-translate-y-[6px] peer-focus:visible absolute" asp-for="Input.Email">@Localizer["Email"]</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="input-group">
                <input class="peer" type="text" placeholder="@Localizer["Phone number"]" asp-for="Input.PhoneNumber" />
                <label class="peer-focus:-translate-y-[6px] peer-focus:visible absolute" asp-for="Input.PhoneNumber">@Localizer["Phone number"]</label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="input-group">
                <select class="peer" asp-for="Input.ZoneInfo" required>
                    <option value="" selected>@Localizer["Choose..."]</option>
                    @foreach (var timezone in zoneInfoProvider.GetTimeZones())
                    {
                        <option value="@timezone.Id">@timezone.DisplayName</option>
                    }
                </select>
                <label class="peer-focus:-translate-y-[6px] peer-focus:visible absolute" asp-for="Input.ZoneInfo">@Localizer["Timezone"]</label>
                <span asp-validation-for="Input.ZoneInfo" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="input-group">
                <input class="peer" type="text" placeholder="@Localizer["Tax identification"]" asp-for="Input.Tin" />
                <label class="peer-focus:-translate-y-[6px] peer-focus:visible absolute" asp-for="Input.Tin">@Localizer["Tax identification"]</label>
                <span asp-validation-for="Input.Tin" class="text-danger"></span>
            </div>
            <div class="input-group">
                <input class="peer" type="date" placeholder="@Localizer["Birth date"]" asp-for="Input.BirthDate" />
                <label class="peer-focus:-translate-y-[6px] peer-focus:visible absolute" asp-for="Input.BirthDate">@Localizer["Birth date"]</label>
                <span asp-validation-for="Input.BirthDate" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-span-12 flex flex-row text-left">
                <input asp-for="Input.ConsentCommercial" type="checkbox" />
                <label for="ConsentCommercial">
                    <span>
                        @Localizer["I have been informed about the processing of my personal data and I consent to it, as specifically defined"]
                        <a class="font-bold" target="_blank" href="/privacy" onclick="event.stopPropagation();">@Localizer["here"].</a>
                    </span>
                </label>
            </div>
        </div>
        <div indice-if="Model.View.HasDeveloperTotp" class="row">
            <div class="col-span-6">
                <input class="peer" type="text" placeholder="@Localizer["Developer TOTP"]" readonly="readonly" asp-for="Input.DeveloperTotp" />
                <label class="peer-focus:-translate-y-[6px] peer-focus:visible absolute" asp-for="Input.DeveloperTotp">@Localizer["Developer TOTP"]</label>
            </div>
        </div>
        <div class="row mt-7 mb-12">
            <div class="md:col-span-6 col-span-12"> <button class="btn  btn-primary" type="submit">@Localizer["Save"]</button></div>
        </div>

        <div class="m-auto" indice-if="Model.View.CurrentLogins?.Count > 0 || Model.View.OtherLogins?.Count > 0">
            <hr>
            <h3 class="text-black mb-1">@Localizer["External providers"]</h3>
            @{
                var alertProviders = TempData.Get<AlertModel>("AlertProviders");
            }
            <partial name="_Alert" model="alertProviders" />
            @if (Model.View.CurrentLogins?.Count > 0)
            {
                <p class="text-sm">@Localizer["Existing providers"]</p>
                <div class="row pb-5 mt-5">
                    @foreach (var provider in Model.View.CurrentLogins)
                    {
                        <div class="idp-@provider.LoginProvider.ToLower() col-span-6">
                            <a class="no-underline cursor-pointer"></a>
                        </div>
                        <div class="col-span-6">
                            <form asp-page-handler="RemoveLogin" method="post" class="inline">
                                <input asp-for="@provider.LoginProvider" name="@nameof(provider.LoginProvider)" type="hidden" />
                                <input asp-for="@provider.ProviderKey" name="@nameof(provider.ProviderKey)" type="hidden" />
                                <button type="submit" class="btn btn-danger" disabled="@(!Model.View.CanRemoveProvider)">@Localizer["Remove"]</button>
                            </form>
                        </div>
                    }
                </div>
            }
            @if (Model.View.OtherLogins?.Count > 0)
            {
                <p class="text-sm">@Localizer["Connect a new provider"]</p>
                <div class="flex justify-start pb-5 mt-5">

                    @foreach (var provider in Model.View.OtherLogins)
                    {
                        <div class="idp idp-@provider.Name.ToLower() mx-2.5">
                            <a asp-page-handler="LinkLogin" asp-route-provider="@provider.Name">
                            </a>
                        </div>
                    }
                </div>
            }
        </div>
    </form>
    <partial name="_LanguageSelector" />
</div>

@section scripts {
    <script type="text/javascript" csp-nonce="true">
        $(document).ready(function () {
            $('#resend-email-link').click(function () {
                $.ajax({
                    url: ''@Url.PageLink(pageName: "/ConfirmEmail", pageHandler: "Resend"))',
                    type: 'GET',
                    dataType: 'json',
                    statusCode: {
                        204: function () {
                            $('#resend-email-link').addClass('disabled');
                            $('#send-confirmation-success').removeClass('hidden');
                        },
                        500: function () {
                            $('#send-confirmation-error').removeClass('hidden');
                        }
                    }
                });
            });
        });
    </script>
    <partial name="_ValidationScripts" />
    <script csp-nonce="true">
        document.querySelectorAll('.idp a').forEach(function (el) {
            el.onclick = function (link) {
                if (!link.target.classList.contains('disabled')) {
                    link.target.classList.add('disabled');
                }
            };
        });
    </script>
}

@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Http.Extensions;
@inject IIdentityViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocalizationOptions

@{
    var htmlUniqueId = $"{Guid.NewGuid():N}";
    var supportedCultures = LocalizationOptions.Value.SupportedUICultures!;
    var lang = CultureInfo.CurrentUICulture.TwoLetterISOLanguageName;
    var langDisplayName = GetLangDisplayName(CultureInfo.CurrentUICulture);
}

@functions {
    public string GetLangDisplayName(CultureInfo culture)
    {
        return culture.TwoLetterISOLanguageName == "en" ? "English" :
               culture.TwoLetterISOLanguageName == "el" ? "Ελληνικά" :
               culture.DisplayName;
    }
}
<div class="language-selector nav-item dropdown">
    <button type="button" class="btn nav-link dropdown-toggle mr-md-2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="@langDisplayName">
        @*<i class="fa fa-globe fa-lg"></i>*@
        <span class="text-uppercase">@lang</span>
    </button>
    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton">
        <form asp-page="/SetLanguage" id="SelectLanguageForm_@htmlUniqueId" asp-route-returnUrl="@Context.Request.GetEncodedPathAndQuery()" method="post" role="form">
            @foreach (var supportedCulture in supportedCultures)
            {
                var optionText = GetLangDisplayName(supportedCulture);
                var isSelected = supportedCulture.TwoLetterISOLanguageName == lang;
                <button type="submit" form="SelectLanguageForm_@htmlUniqueId"
                        name="culture" value="@supportedCulture.Name" title="@optionText"
                        class="dropdown-item font-weight-600 text-uppercase @(isSelected ? "active" : string.Empty)">
                    @optionText
                </button>
            }
        </form>
    </div>
</div>
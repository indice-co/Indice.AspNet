@inject IMarkdownProcessor Markdown
@inject IIdentityViewLocalizer Localizer

@model ScopeViewModel

<li class="list-group-item">
    <div class="form-check custom-checkbox d-inline-block">
        <label class="form-check-label">
            <input class="consent-scopecheck" type="checkbox" name="Input.ScopesConsented" id="scopes_@Model.Value" value="@Model.Value" checked="@Model.Checked" disabled="@Model.Required" />
            <span class="control"></span>
            @if (Model.Required)
            {
                <input type="hidden" name="Input.ScopesConsented" value="@Model.Value" />
            }
            <strong>@(!string.IsNullOrWhiteSpace(Model.DisplayName) ? Localizer[Model.DisplayName] : string.Empty)</strong>
            @if (Model.Emphasize)
            {
                <span class="glyphicon glyphicon-exclamation-sign"></span>
            }
        </label>
    </div>
    @if (Model.Required)
    {
        <span><em>(@Localizer["required"])</em></span>
    }
    @if (Model.Description is not null)
    {
        <div class="consent-description">
            <label for="scopes_@Model.Value">@Html.Raw(Markdown.Convert(Model.Description))</label>
        </div>
    }
</li>

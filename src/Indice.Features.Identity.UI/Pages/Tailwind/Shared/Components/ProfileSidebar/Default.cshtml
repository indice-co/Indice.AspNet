@inject IViewLocalizer Localizer

@model ProfileViewModel

@{
    ViewData["Title"] = Localizer["Profile"];
    var lang = CultureInfo.CurrentUICulture.TwoLetterISOLanguageName;
    var langSuffix = (lang == "el") ? ".el" : string.Empty;
    var alert = TempData.Get<AlertModel>("Alert");
}
<div class="tab-panel"
     id="profile"
     role="tabpanel"
     aria-labelledby="profile-tab">
    <h3 class="text-black mb-1">@Localizer["Manage Profile View Component"]</h3>
    <div class="overflow-y-scroll">
        <partial name="_Alert" model="alert" />
        <partial name="_ValidationSummary" />
        <div class="row">
            <div class="input-group flex flex-col mb-3">
                <span>@Model.FirstName</span>
                <label>@Localizer["First name"]</label>
            </div>
            <div class="input-group flex flex-col mb-3">
                <span>@Model.LastName</span>
                <label>@Localizer["Last name"]</label>
            </div>
        </div>
        <div class="row">
            <div class="input-group flex flex-col mb-3">
                <span>@Model.UserName</span>
                <label>@Localizer["Username"]</label>
            </div>
            <div class="input-group flex flex-col mb-3">
                <a indice-if="Model.EmailChangePending" href="#" id="resend-email-link" style="font-size: x-small;">(@Localizer["Confirmation"] →)</a>
                <span>@Model.Email</span>
                <label> @Localizer["Email"]</label>
            </div>
        </div>
        <div class="row">
            <div class="input-group flex flex-col">
                <span>@Model.PhoneNumber</span>
                <label>@Localizer["Phone number"]</label>
            </div>
        </div>
        <div class="row">
            <div class="input-group flex flex-col mb-3">
                <span>@(!Model.Tin.IsNullOrEmpty() ? Model.Tin : '-')</span>
                <label>@Localizer["Tax identification"]</label>
            </div>
            <div class="input-group flex flex-col mb-3">
                <span>@(Model.BirthDate.HasValue ? Model.BirthDate : '-')</span>
                <label>@Localizer["Birth date"]</label>
            </div>
        </div>
        <div indice-if="Model.HasDeveloperTotp" class="row">
            <div class="col-span-6">
                <span>@Model.DeveloperTotp</span>
                <label>@Localizer["Developer TOTP"]</label>
            </div>
        </div>
        <div class="m-auto" indice-if="Model.CurrentLogins?.Count > 0 || Model.OtherLogins?.Count > 0">
            <hr>
            <h3 class="text-black mb-1">@Localizer["External providers"]</h3>
            @{
                var alertProviders = TempData.Get<AlertModel>("AlertProviders");
            }
            <partial name="_Alert" model="alertProviders" />
            @if (Model.CurrentLogins?.Count > 0)
            {
                <p class="text-sm">@Localizer["Existing providers"]</p>
                <div class="row pb-5 mt-5">
                    @foreach (var provider in Model.CurrentLogins)
                    {
                        <div class="idp-@provider.LoginProvider.ToLower() col-span-6">
                            <a class="no-underline cursor-pointer"></a>
                        </div>
                    }
                </div>
            }
            @if (Model.OtherLogins?.Count > 0)
            {
                <p class="text-sm">@Localizer["Connect a new provider"]</p>
                <div class="flex justify-start pb-5 mt-5">

                    @foreach (var provider in Model.OtherLogins)
                    {
                        <div class="idp-@provider.Name.ToLower() mx-2.5">
                            <a asp-page="/Profile" asp-page-handler="LinkLogin" asp-route-provider="@provider.Name">
                            </a>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>